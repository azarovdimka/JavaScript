// Написать простой прототип системы регистрации пользователей. Для этого используйте две ФУНКЦИИ-конструктора:
// 1. User, которая создает объект типа «пользователь» со следующими свойствами: { // имя firstName: ‘', // фамилия lastName: '’, 
    // дата и время регистрации regDate: ''}. Объекты типа User предназначены для сохранения каждой отдельной записи о пользователе.
// 2. UserList, которая создает объект типа “список пользователей” со следующими свойствами и методами: { // внутреннее свойство-массив, в которое будут попадать объекты типа User users: [], 
// метод получает в качестве параметра объект типа User и сохраняет его в массив users add: function(user) {}, // метод возвращает список пользователей из массива users getAllUsers: 
// function() {}}. Объекты типа UserList предназначены для хранения множества записей типа User. 
// При запуске программы должно происходить:
// 1. Создавать новый экземпляр объекта UserList (с пустым свойством-массивом users).
// 2. Открываться диалог prompt с предложением ввести имя и фамилию пользователя для регистрации (одной строкой через пробел).
// 3. После нажатия ОК должен создаваться новый экземпляр объекта User с заполнением свойств firstName, lastName и regDate (текущая дата и время).
// 4. Созданный экземпляр объекта должен сохраняться в свойство-массив users созданного ранее объекта типа UserList (при помощи метода add).
// 5. Диалог prompt должен повторяться, пока пользователь не нажмет “Отмена”.
// 6. После нажатия «Отмена» выведите на экран (в консоль или при помощи alert) список всех пользователей с именами и датами регистрации (используйте для этого метод getAllUsers).

 'use strict'
                                                        // я как понял этот "детский сад" (function User) из урока вообще не нужен?
 function User (firstName, lastName) {                  //функция-конструктор для внесения пользователя в объект?
     this.firstName = firstName;
     this.lastName = lastName;
     this.regDate = new regDate().toLocaleString();     //вызов функции из соседнего js-файла для сообщения программе текущей даты и времени
     };

function UserList() {                                    //userList функция-конструктор по созданию массива пользователей
    this.usersMassive = [];                                 // usersMassive для хранекния объектов пользователей
    this.add = function(user) {                          //---?? зачем сначала add - добавляет объект в массив?
        this.usersMassive.push(user);                       // ---?? потом push - добавляет значение в объект?  
    };                                                   // ---?? в чем отличия usersMassive от UserList? функция UserList выводит список - а usermassive хранит список?
    this.getAllUsers = function() {
        let str = '';                                    // зачем в переменной str пробел?
        console.log(this.usersMassive);                  // эта строка не выводит в консоль ключ-значение каждого объекта?
    }
}

function registration () {  
    let userlist = new UserList();                       // создали новый массив с новым объектом?
    let fullName;
    }
    do {
        fullName = prompt ('Введите через пробел имя и фамилию:');  // почему мы здесь вводим сразу полное имя, а добавляется в массив отдельно user (стр. 25)
        if (fullName != null) {
            let str = fullName.trimRight();
            str = fullName.trimLeft();
            let newuserMassive = fullName.split(' ');     // зачем создан newuserMassive,  если у нас уже создан массив userUsers (стр. 24)
            let user = new User (newuserMassive[0], newuserMassive[1]);   // Одна переменная может содержать два значекния? как это?

            if (newuserMassive.length == 2) {
                userlist.add(user);                     
            } else {
                alert('Ошибка: Пользователь не внесен в базу данных.')
            }
        } else {
            userlist.getAllUsers()         // в противном случае, если нажади клавишу отмена выводит список пользователей
        };
        }while (fullName != null);         
 
registration ();
